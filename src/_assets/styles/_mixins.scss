@import "variables";

@mixin absfill {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
}

$margin-big: 12.5%;
$margin-sm: -2.5%;

@mixin placard-left {
  .fg {
    flex-direction: row;
    justify-content: flex-start;
    margin-left: $margin-big;
    @include med {
      margin-left: $margin-sm;
    }
  }
}

@mixin placard-top {
  .fg {
    flex-direction: row;
    align-items: flex-start;
  }
}

@mixin placard-right {
  .fg {
    flex-direction: row;
    justify-content: flex-end;
    margin-right: $margin-big;
    @include med {
      margin-right: $margin-sm;
    }
  }
}

@mixin placard-bottom {
  .fg {
    flex-direction: row;
    align-items: flex-end;
  }
}

@mixin med {
  @media (min-width: 500px) {
    @content;
  }
}

@mixin lg {
  @media (min-width: 1000px) {
    @content;
  }
}

@mixin section($id, $color) {
  &--#{$id} {
    div.shield {
      background-color: $color;
    }
    h2 {
      color: $color;
    }
  }
}
@mixin sized($width: 1, $height: 1) {
  grid-column-end: span $width;
  grid-row-end: span $height;
}

///////
@mixin full($span: 1) {
  @include med {
    grid-column: 1 / span 4;
    grid-row: span $span;
  }
}
@mixin center($span: 1) {
  @include med {
    grid-column: 2 / span 2;
    grid-row: span $span;
  }
}

@mixin topAlignImage {
  .bg {
    picture,
    img {
      object-position: center top;
    }
  }
}

@mixin topContainImage {
  .box--image {
    .bg picture,
    img {
      object-position: top;
      object-fit: contain;
    }
  }
}

@mixin masthead($span: 1) {
  .box.box--masthead {
    @include full();
    grid-row: span $span;
    min-height: 300px;
    @include med {
      min-height: 400px;
    }
  }
}

@mixin text($span: 1) {
  .box.box--text {
    @include center;
    grid-row: span $span;
    &:nth-child(3) {
      @include placard-left();
    }
    &:nth-child(5) {
      @include placard-right();
    }
  }
}

@mixin skinnyImages($span: 1) {
  @include med {
    .box.box--image {
      &:nth-child(odd) {
        grid-column: 2 / span 1;
        grid-row: span $span;
      }
      &:nth-child(even) {
        grid-column: 3 / span 1;
        grid-row: span $span;
      }
    }
  }
}

@mixin wideImages($span: 1) {
  @include med {
    .box.box--image {
      grid-row: span $span;
      &:nth-child(odd) {
        grid-column: 1 / span 2;
      }
      &:nth-child(even) {
        grid-column: 3 / span 2;
      }
    }
  }
}

// Four images across
@mixin fourImages($span: 1) {
  @include med {
    .box.box--image {
      &:nth-child(odd),
      &:nth-child(even) {
        // this is to override the base column span.
        grid-column: span 1;
        min-height: 200px;
      }
      grid-row: span $span;
    }
  }
}

@mixin lastImageCentered($span: 1) {
  .box.box--image:last-of-type {
    &:nth-child(odd),
    &:nth-child(even) {
      @include center($span);
    }
  }
}
